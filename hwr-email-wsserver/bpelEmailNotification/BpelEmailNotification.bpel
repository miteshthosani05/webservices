<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Mon Dec 17 02:06:40 EST 2012
  Author:  mthosani
  Type: BPEL 1.1 Process
  Purpose: One Way BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="BpelEmailNotification"
               targetNamespace="http://xmlns.oracle.com/Bpel_Email_Notification/Bpel_Email_Notification/BpelEmailNotification"
               xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
               xmlns:client="http://xmlns.oracle.com/Bpel_Email_Notification/Bpel_Email_Notification/BpelEmailNotification"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ns1="http://xmlns.oracle.com/ias/pcbpel/NotificationService">

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="bpelemailnotification_client" partnerLinkType="client:BpelEmailNotification" myRole="BpelEmailNotificationProvider"/>
    <partnerLink name="NotificationService1"
                 partnerLinkType="ns1:NotificationServiceLink"
                 partnerRole="NotificationServiceProvider"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:BpelEmailNotificationRequestMessage"/>

  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in BpelEmailNotification.wsdl) -->
    <receive name="receiveInput" partnerLink="bpelemailnotification_client" portType="client:BpelEmailNotification" operation="process" variable="inputVariable" createInstance="yes"/>
    <scope name="Email1">
      <bpelx:annotation>
        <bpelx:pattern patternName="bpelx:email"></bpelx:pattern>
      </bpelx:annotation>
      <variables>
        <variable name="varNotificationReq"
                  messageType="ns1:EmailNotificationRequest"/>
        <variable name="varNotificationResponse"
                  messageType="ns1:ArrayOfResponse"/>
        <variable name="NotificationServiceFaultVariable"
                  messageType="ns1:NotificationServiceErrorMessage"/>
      </variables>
      <sequence name="Sequence1">
        <assign name="EmailParamsAssign">
          <copy>
            <from expression="string('Default')"/>
            <to variable="varNotificationReq" part="EmailPayload"
                query="/EmailPayload/ns1:FromAccountName"/>
          </copy>
          <copy>
            <from expression="string('')"/>
            <to variable="varNotificationReq" part="EmailPayload"
                query="/EmailPayload/ns1:Bcc"/>
          </copy>
          <copy>
            <from expression="string('')"/>
            <to variable="varNotificationReq" part="EmailPayload"
                query="/EmailPayload/ns1:Cc"/>
          </copy>
          <copy>
            <from expression="string('')"/>
            <to variable="varNotificationReq" part="EmailPayload"
                query="/EmailPayload/ns1:ReplyToAddress"/>
          </copy>
          <copy>
            <from expression="bpws:getVariableData('inputVariable','payload','/client:process/client:Subject')"/>
            <to variable="varNotificationReq" part="EmailPayload"
                query="/EmailPayload/ns1:Subject"/>
          </copy>
          <copy>
            <from expression="bpws:getVariableData('inputVariable','payload','/client:process/client:Email-ID')"/>
            <to variable="varNotificationReq" part="EmailPayload"
                query="/EmailPayload/ns1:To"/>
          </copy>
          <copy>
            <from expression="bpws:getVariableData('inputVariable','payload','/client:process/client:Body')"/>
            <to variable="varNotificationReq" part="EmailPayload"
                query="/EmailPayload/ns1:Content/ns1:ContentBody"/>
          </copy>
          <copy>
            <from expression="string('text/html; charset=UTF-8')"/>
            <to variable="varNotificationReq" part="EmailPayload"
                query="/EmailPayload/ns1:Content/ns1:MimeType"/>
          </copy>
        </assign>
        <invoke name="InvokeNotificationService"
                portType="ns1:NotificationService"
                partnerLink="NotificationService1"
                inputVariable="varNotificationReq"
                outputVariable="varNotificationResponse"
                operation="sendEmailNotification"/>
      </sequence>
    </scope>
  </sequence>
</process>