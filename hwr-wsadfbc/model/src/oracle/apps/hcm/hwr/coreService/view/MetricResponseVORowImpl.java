package oracle.apps.hcm.hwr.coreService.view;


import oracle.apps.fnd.applcore.oaext.model.OAViewRowImpl;

import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 29 02:00:10 PDT 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MetricResponseVORowImpl extends OAViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
    CompletedItems,
    TimeStampofCompletion;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;


        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }

    public static int count() {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }
  }


  public static final int COMPLETEDITEMS = AttributesEnum.CompletedItems.index();
  public static final int TIMESTAMPOFCOMPLETION = AttributesEnum.TimeStampofCompletion.index();

  /**
   * This is the default constructor (do not remove).
   */
    public MetricResponseVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CompletedItems.
     * @return the CompletedItems
     */
    public Long getCompletedItems() {
        return (Long)getAttributeInternal(COMPLETEDITEMS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompletedItems.
     * @param value value to set the  CompletedItems
     */
    public void setCompletedItems(Long value) {
        setAttributeInternal(COMPLETEDITEMS, value);
    }


  /**
   * Gets the attribute value for the calculated attribute TimeStampofCompletion.
   * @return the TimeStampofCompletion
   */
  public String getTimeStampofCompletion() {
    return (String)getAttributeInternal(TIMESTAMPOFCOMPLETION);
  }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TimeStampofCompletion.
     * @param value value to set the  TimeStampofCompletion
     */
    public void setTimeStampofCompletion(String value) {
        setAttributeInternal(TIMESTAMPOFCOMPLETION, value);
    }


  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {


    final AttributesEnum[] vals = AttributesEnum.staticValues();
    int enumIndex = index - AttributesEnum.firstIndex();
    if ((enumIndex >= 0) && (enumIndex < vals.length)) {
      switch (vals[enumIndex]) {
      case CompletedItems:
        return getCompletedItems();
      case TimeStampofCompletion:
        return getTimeStampofCompletion();
      }
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {

    final AttributesEnum[] vals = AttributesEnum.staticValues();
    int enumIndex = index - AttributesEnum.firstIndex();
    if ((enumIndex >= 0) && (enumIndex < vals.length)) {
      switch (vals[enumIndex]) {
      case CompletedItems:
        setCompletedItems((Long)value);
        return;
      case TimeStampofCompletion:
        setTimeStampofCompletion((String)value);
        return;
      }
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }
}
