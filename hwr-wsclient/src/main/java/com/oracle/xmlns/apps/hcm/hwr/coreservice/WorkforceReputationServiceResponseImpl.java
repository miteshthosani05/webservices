package com.oracle.xmlns.apps.hcm.hwr.coreservice;

import com.sun.xml.ws.api.addressing.AddressingVersion;
import com.sun.xml.ws.api.message.Header;
import com.sun.xml.ws.api.message.HeaderList;
import com.sun.xml.ws.developer.JAXWSProperties;

import javax.annotation.Resource;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.jws.soap.SOAPBinding.ParameterStyle;
import javax.jws.soap.SOAPBinding.Style;

import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.WebServiceContext;
import javax.xml.ws.soap.Addressing;
// !THE CHANGES MADE TO THIS FILE WILL BE DESTROYED IF REGENERATED!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (11.1.1.0.0, build 130224.1947.04102)

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

@WebService(targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/",
  name="WorkforceReputationServiceResponse")
@XmlSeeAlso(
  { com.oracle.xmlns.apps.hcm.hwr.coreservice.types.ObjectFactory.class })
@SOAPBinding(style=Style.DOCUMENT)
@Addressing(enabled=true, required=true)
public class WorkforceReputationServiceResponseImpl
{
  @Resource
  private WebServiceContext wsContext;

  private static final AddressingVersion WS_ADDR_VER = AddressingVersion.W3C;
  
  /** The logger */
  private static final Log LOGGER = LogFactory.getLog(WorkforceReputationServiceResponseImpl.class);

  @WebMethod(action="http://xmlns.oracle.com/oracleas/schema/oracle-fault-11_0/Fault")
  @SOAPBinding(parameterStyle=ParameterStyle.BARE)
  @Action(input="http://xmlns.oracle.com/oracleas/schema/oracle-fault-11_0/Fault")
  @Oneway
  public void onFault(@WebParam(targetNamespace="http://xmlns.oracle.com/oracleas/schema/oracle-fault-11_0",
      partName="parameters", name="Fault")
    com.oracle.xmlns.apps.hcm.hwr.coreservice.types.FaultType parameters)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    LOGGER.info("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    LOGGER.info("RelatesTo message id: " + relatesToMessageId);

    LOGGER.info("parameters: '" + parameters + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/hcm/hwr/coreService/mergePersonaSyncDataAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/hcm/hwr/coreService/mergePersonaSyncDataAsyncResponse")
  @RequestWrapper(localName="mergePersonaSyncDataAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
    className="com.oracle.xmlns.apps.hcm.hwr.coreservice.types.MergePersonaSyncDataAsyncResponse")
  @Oneway
  public void mergePersonaSyncDataAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
      name="result")
    String result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    LOGGER.info("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    LOGGER.info("RelatesTo message id: " + relatesToMessageId);

    LOGGER.info("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/hcm/hwr/coreService/updateJobProgressAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/hcm/hwr/coreService/updateJobProgressAsyncResponse")
  @RequestWrapper(localName="updateJobProgressAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
    className="com.oracle.xmlns.apps.hcm.hwr.coreservice.types.UpdateJobProgressAsyncResponse")
  @Oneway
  public void updateJobProgressAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
      name="result")
    String result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    LOGGER.info("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    LOGGER.info("RelatesTo message id: " + relatesToMessageId);

    LOGGER.info("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/hcm/hwr/coreService/pollForJobAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/hcm/hwr/coreService/pollForJobAsyncResponse")
  @RequestWrapper(localName="pollForJobAsyncResponse", targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
    className="com.oracle.xmlns.apps.hcm.hwr.coreservice.types.PollForJobAsyncResponse")
  @Oneway
  public void pollForJobAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
      name="result")
    String result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    LOGGER.info("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    LOGGER.info("RelatesTo message id: " + relatesToMessageId);

    LOGGER.info("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/hcm/hwr/coreService/writeConnectorDataAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/hcm/hwr/coreService/writeConnectorDataAsyncResponse")
  @RequestWrapper(localName="writeConnectorDataAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
    className="com.oracle.xmlns.apps.hcm.hwr.coreservice.types.WriteConnectorDataAsyncResponse")
  @Oneway
  public void writeConnectorDataAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
      name="result")
    String result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    LOGGER.info("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    LOGGER.info("RelatesTo message id: " + relatesToMessageId);

    LOGGER.info("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/hcm/hwr/coreService/registerUserAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/hcm/hwr/coreService/registerUserAsyncResponse")
  @RequestWrapper(localName="registerUserAsyncResponse", targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
    className="com.oracle.xmlns.apps.hcm.hwr.coreservice.types.RegisterUserAsyncResponse")
  @Oneway
  public void registerUserAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
      name="result")
    String result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    LOGGER.info("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    LOGGER.info("RelatesTo message id: " + relatesToMessageId);

    LOGGER.info("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/hcm/hwr/coreService/initializeWLAAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/hcm/hwr/coreService/initializeWLAAsyncResponse")
  @RequestWrapper(localName="initializeWLAAsyncResponse", targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
    className="com.oracle.xmlns.apps.hcm.hwr.coreservice.types.InitializeWLAAsyncResponse")
  @Oneway
  public void initializeWLAAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
      name="result")
    String result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    LOGGER.info("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    LOGGER.info("RelatesTo message id: " + relatesToMessageId);

    LOGGER.info("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/hcm/hwr/coreService/getUserProfileAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/hcm/hwr/coreService/getUserProfileAsyncResponse")
  @RequestWrapper(localName="getUserProfileAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
    className="com.oracle.xmlns.apps.hcm.hwr.coreservice.types.GetUserProfileAsyncResponse")
  @Oneway
  public void getUserProfileAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
      name="result")
    String result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    LOGGER.info("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    LOGGER.info("RelatesTo message id: " + relatesToMessageId);

    LOGGER.info("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/hcm/hwr/coreService/searchUserToEndorseAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/hcm/hwr/coreService/searchUserToEndorseAsyncResponse")
  @RequestWrapper(localName="searchUserToEndorseAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
    className="com.oracle.xmlns.apps.hcm.hwr.coreservice.types.SearchUserToEndorseAsyncResponse")
  @Oneway
  public void searchUserToEndorseAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
      name="result")
    String result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    LOGGER.info("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    LOGGER.info("RelatesTo message id: " + relatesToMessageId);

    LOGGER.info("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(operationName="EndorseUserAsyncResponse", action="http://xmlns.oracle.com/apps/hcm/hwr/coreService/EndorseUserAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/hcm/hwr/coreService/EndorseUserAsyncResponse")
  @RequestWrapper(localName="EndorseUserAsyncResponse", targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
    className="com.oracle.xmlns.apps.hcm.hwr.coreservice.types.EndorseUserAsyncResponse")
  @Oneway
  public void endorseUserAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
      name="result")
    String result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    LOGGER.info("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    LOGGER.info("RelatesTo message id: " + relatesToMessageId);

    LOGGER.info("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/hcm/hwr/coreService/getUserToEndorseAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/hcm/hwr/coreService/getUserToEndorseAsyncResponse")
  @RequestWrapper(localName="getUserToEndorseAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
    className="com.oracle.xmlns.apps.hcm.hwr.coreservice.types.GetUserToEndorseAsyncResponse")
  @Oneway
  public void getUserToEndorseAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
      name="result")
    String result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    LOGGER.info("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    LOGGER.info("RelatesTo message id: " + relatesToMessageId);

    LOGGER.info("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/hcm/hwr/coreService/getMyEndorsementsAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/hcm/hwr/coreService/getMyEndorsementsAsyncResponse")
  @RequestWrapper(localName="getMyEndorsementsAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
    className="com.oracle.xmlns.apps.hcm.hwr.coreservice.types.GetMyEndorsementsAsyncResponse")
  @Oneway
  public void getMyEndorsementsAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/hcm/hwr/coreService/types/",
      name="result")
    String result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    LOGGER.info("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    LOGGER.info("RelatesTo message id: " + relatesToMessageId);

    LOGGER.info("result: '" + result + "'");
    // Add your implementation here.
  }
}
